{"version":3,"sources":["img/0.png","img/1.png","img/2.png","img/3.png","img/4.png","img/5.png","img/6.png","components/Header.js","components/HangmanImages.js","components/Letter.js","components/LetterList.js","actions/index.js","actions/ActionTypes.js","components/GameControl.js","components/App.js","serviceWorker.js","components/WordList.js","reducers/answer-reducer.js","reducers/index.js","reducers/letter-list-reducer.js","reducers/mistake-counter-reducer.js","index.js"],"names":["module","exports","Header","Navbar","collapseOnSelect","expand","bg","variant","Brand","href","Toggle","aria-controls","images","step0","step1","step2","step3","step4","step5","step6","Letter","props","Fragment","Button","style","margin","onClick","whenLetterClicked","currentLetter","LetterList","masterLetterList","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","width","height","display","flexWrap","justifyContent","marginTop","marginBottom","Object","keys","map","key","guessedLetters","has","onLetterClick","id","addMistake","value","type","GameControl","handleGuess","letter","dispatch","a","answer","includes","updatedCount","state","correctGuesses","setState","resetGame","this","split","guessed","gameStatus","isWinner","guessedWord","join","gameOverLost","mistake","gameOver","Container","alignItems","src","alt","color","fontSize","React","Component","connect","App","fontFamily","Boolean","window","location","hostname","match","masterWordList","randomWord","random","Math","floor","length","rootReducer","combineReducers","Set","action","add","resetSet","updateMistakeCount","currentAnswer","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.7a34e42f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/0.f24e0265.png\";","module.exports = __webpack_public_path__ + \"static/media/1.00c6464d.png\";","module.exports = __webpack_public_path__ + \"static/media/2.c023a153.png\";","module.exports = __webpack_public_path__ + \"static/media/3.9d545e72.png\";","module.exports = __webpack_public_path__ + \"static/media/4.dffcfbc7.png\";","module.exports = __webpack_public_path__ + \"static/media/5.f6761f09.png\";","module.exports = __webpack_public_path__ + \"static/media/6.5f1fe92d.png\";","import React from 'react';\nimport { Navbar } from 'react-bootstrap';\n\nfunction Header() {\n  return (\n    <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n    <Navbar.Brand href=\"#\">Hangman</Navbar.Brand>\n    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n  </Navbar>\n  );\n}\n\nexport default Header;","import step0 from '../img/0.png';\nimport step1 from '../img/1.png';\nimport step2 from '../img/2.png';\nimport step3 from '../img/3.png';\nimport step4 from '../img/4.png';\nimport step5 from '../img/5.png';\nimport step6 from '../img/6.png';\n\nexport const images = [step0, step1, step2, step3, step4, step5, step6];","import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\n\nfunction Letter(props){\n  const buttonStyles = {\n    margin: '2px'\n  };\n\n  return (\n    <React.Fragment>\n      <Button style={buttonStyles} onClick={()=> props.whenLetterClicked(props.currentLetter)} variant=\"outline-secondary\">{props.currentLetter}</Button>\n    </React.Fragment>\n  );\n}\n\nLetter.propTypes = {\n  currentLetter: PropTypes.string,\n  id: PropTypes.string,\n  whenLetterClicked: PropTypes.func\n}\n\nexport default Letter;","import React from 'react';\nimport Letter from './Letter';\nimport PropTypes from 'prop-types';\n\nfunction LetterList(props) {\n\n  const masterLetterList = {\n    1: 'a', \n    2: 'b',\n    3: 'c',\n    4: 'd',\n    5: 'e',\n    6: 'f',\n    7: 'g',\n    8: 'h',\n    9: 'i',\n    10: 'j',\n    11: 'k',\n    12: 'l',\n    13: 'm',\n    14: 'n',\n    15: 'o',\n    16: 'p',\n    17: 'q',\n    18: 'r',\n    19: 's',\n    20: 't',\n    21: 'u',\n    22: 'v',\n    23: 'w',\n    24: 'x',\n    25: 'y',\n    26: 'z'\n  };\n\n  const letterStyles = {\n    width: '350px',\n    height: 'auto',\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'flexStart',\n    marginTop: '1%',\n    marginBottom: '1%'\n  };\n\n  return(\n    <React.Fragment>\n      <div style={letterStyles}>\n        {Object.keys(masterLetterList).map((key) => \n          (props.guessedLetters.has(masterLetterList[key])) ? \"\" : <Letter currentLetter={masterLetterList[key]} whenLetterClicked={props.onLetterClick} key={key} id={key} />\n        )}\n      </div>\n    </React.Fragment>\n  );\n};\n\nLetterList.propTypes = {\n  onLetterClick: PropTypes.func,\n  guessedLetters: PropTypes.object\n}\n\nexport default LetterList;","import * as c from './ActionTypes';\n\nexport const setAnswer = () => ({\n  type: c.SET_ANSWER\n});\nexport const addMistake = (value) => ({\n  type: c.ADD_MISTAKE,\n  value: value\n});\nexport const addGuess = (letter) => ({\n  type: c.ADD_GUESS,\n  value: letter\n});\nexport const resetGuesses = () => ({\n  type: c.RESET_GUESSES\n});\nexport const resetMistakes = () => ({\n  type: c.RESET_MISTAKES\n});","export const SET_ANSWER = 'SET_ANSWER';\nexport const ADD_MISTAKE = 'ADD_MISTAKE';\nexport const ADD_GUESS = 'ADD_GUESS';\nexport const RESET_GUESSES = 'RESET_GUESSES';\nexport const RESET_MISTAKES = 'RESET_MISTAKES';","import React from 'react';\nimport { Button, Container } from 'react-bootstrap';\nimport { images } from './HangmanImages';\nimport LetterList from './LetterList.js';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport * as a from '../actions';\n\nclass GameControl extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      correctGuesses: 0\n    }\n  }\n  \n  guessedWord(){\n    return this.props.answer.split(\"\").map(letter => (this.props.guessed.has(letter) ? letter : \" _ \"));\n  };\n\n  handleGuess = (letter) => {\n    const { dispatch } = this.props;\n    const actionOne = a.addGuess(letter);\n    dispatch(actionOne);\n    const actionTwo = this.props.answer.includes(letter) ? a.addMistake(0) : a.addMistake(1);\n    dispatch(actionTwo);\n    if (this.props.answer.includes(letter)) {\n      const updatedCount = this.state.correctGuesses + 1;\n      this.setState({correctGuesses: updatedCount});\n    }\n  };\n\n  resetGame = () => {\n    const { dispatch } = this.props;\n    const action = a.resetMistakes();\n    dispatch(action);\n    const actionTwo = a.resetGuesses();\n    dispatch(actionTwo);\n    const actionThree = a.setAnswer();\n    dispatch(actionThree);\n  }\n\n  render(){\n    const isWinner = this.guessedWord().join(\"\") === this.props.answer;\n\n    const gameOverLost = this.props.mistake >= 6;\n\n    const gameOver = isWinner || gameOverLost;\n\n    let gameStatus;\n    if (isWinner) {\n      gameStatus = \"You won!\";\n    }\n    if (gameOverLost) {\n      gameStatus = \"You lost!\";\n    }\n\n    const imgStyles = {\n      height: '75vh',\n      width: 'auto'\n    };\n    const winStyles = {\n      color: '#17a2b8',\n      fontSize: '3em'\n    };\n    const gameStyles = {\n      marginTop: '2%',\n      display: 'flex',\n      justifyContent: 'space-around',\n      alignItems: 'center'\n    };\n\n    return (\n      <React.Fragment>\n        <Container style={gameStyles}>\n          <div>\n            <img style={imgStyles} src={images[this.props.mistake]} alt=\"current state of hangman\"></img>\n          </div>\n          <div>\n            <p>incorrect guesses: {this.props.mistake} of 6</p>\n            <p>Guess the word:</p>\n            <p>{!gameOver ? this.guessedWord() : this.props.answer}</p>\n            {!gameOver ? <LetterList guessedLetters={this.props.guessed} onLetterClick={this.handleGuess} /> : <p>GAME OVER</p>}\n            <p style={winStyles}>{gameStatus}</p>\n            <Button variant=\"outline-info\" onClick={this.resetGame}>Restart game</Button>\n          </div>\n        </Container>\n      </React.Fragment>\n    );\n  }\n}\n\nGameControl.propTypes = {\n  guessed: PropTypes.object,\n  mistake: PropTypes.number,\n  answer: PropTypes.string\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    guessed: state.guessed,\n    mistake: state.mistake,\n    answer: state.answer\n  }\n};\n\nGameControl = connect(mapStateToProps)(GameControl);\n\nexport default GameControl;","import React from 'react';\nimport Header from './Header';\nimport GameControl from './GameControl';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n\n  const appStyles = {\n    fontFamily: \"'Montserrat', sans-serif\"\n  };\n\n  return (\n    <div style={appStyles}>\n      <Header />\n      <GameControl />\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const masterWordList = [\n  'pacific',\n  'northwest',\n  'oregon',\n  'mission',\n  'popcorn',\n  'ocean',\n  'jewel',\n  'flower',\n  'hibiscus',\n  'cider',\n  'alphabet',\n  'sassafras',\n  'coding',\n  'javascript',\n  'computer',\n  'blanket',\n  'boom',\n  'cabinet',\n  'mug',\n  'begonia',\n  'planter',\n  'bucket',\n  'carpet',\n  'princess',\n  'coronavirus',\n  'pokemon',\n  'rhythm',\n  'blooms',\n  'festival',\n  'autumn',\n  'zephyr',\n  'wicker',\n  'gnat',\n  'oryx',\n  'zigzag',\n  'hippopotamus',\n  'qiviut',\n  'xebec',\n  'bdellium',\n  'paradox',\n  'dermatoglyphics',\n  'electroconvulsive',\n  'dysphagia',\n  'cricothyrotomy'\n];\n\nexport function randomWord() {\n  const random = Math.floor((Math.random() * masterWordList.length));\n  return masterWordList[random];\n};","import { randomWord } from '../components/WordList';\nimport * as c from './../actions/ActionTypes';\n\nexport default (state = \"haru\", action) => {\n  switch (action.type) {\n    case c.SET_ANSWER:\n      const currentAnswer = randomWord();\n      return currentAnswer;\n    default:\n      return state;\n  }\n};","import letterListReducer from './letter-list-reducer';\nimport mistakeCountReducer from './mistake-counter-reducer';\nimport answerReducer from './answer-reducer';\nimport { combineReducers } from 'redux';\n\nconst rootReducer = combineReducers({\n  guessed: letterListReducer,\n  mistake: mistakeCountReducer,\n  answer: answerReducer\n});\n\nexport default rootReducer;","import * as c from './../actions/ActionTypes';\n\nexport default (state = new Set(), action) => {\n  const { value } = action;\n  switch(action.type) {\n    case c.ADD_GUESS:\n      state.add(value);\n      return state;\n    case c.RESET_GUESSES:\n      const resetSet = new Set();\n      return resetSet;\n    default:\n      return state;\n  }\n};","import * as c from './../actions/ActionTypes';\n\nexport default (state = 0, action) => {\n  const { value } = action;\n  switch(action.type) { \n    case c.ADD_MISTAKE:\n      const updateMistakeCount = state + value;\n      return updateMistakeCount;\n    case c.RESET_MISTAKES:\n      return 0;\n    default:\n      return state;\n  }\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport rootReducer from './reducers/index';\nimport { Provider } from 'react-redux'\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}